name: Backend CI Workflow

on:
  push:
    branches: 
      - main
      - dev

env:
  REGISTRY: ghcr.io
  ORG: disilab-frba-utn-edu-ar
  REPOSITORY: t2-s1-socios-back
  BRANCH: ${{ github.ref_name }}

jobs:

  build-and-registry-ghcr: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      id-token: write 

    steps:
      
      - 
        name: Check trigguer
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::prod"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "::set-output name=env_name::dev"
          elif [ "${{ github.ref }}" = "refs/heads/qa" ]; then
            echo "::set-output name=env_name::qa"
          else
            echo "::set-output name=env_name::dev"
          fi
      
      - 
        name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d.%m.%y')"
      
      - 
        name: Checkout code
        uses: actions/checkout@v3
      
      - 
        name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'
      
      -
        # Set up BuildKit Docker container builder to be able to build
        # multi-platform images and export cache
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      
      - 
        # Login against a Docker Registry
        name: Docker Login Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 
      
      - 
        # Extract metadata (tags, labels) for Docker
        name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPOSITORY }}
          tags: ${{ steps.date.outputs.date }}-${{ github.ref_name }}.${{ github.run_number }}
      
      -  
        # Build and push Docker image with Buildx
        name: Build Docker Image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.output.labels }}

      - 
        # Sign the resulting Docker image digest except on PRs.
        # This will only write to the public Rekor transparency log when the Docker
        # repository is public to avoid leaking data.
        name: Sign the published Docker Image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  deploy-to-dokku:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build-and-registry-ghcr

    steps:

      - 
        name: Check trigguer
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::prod"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "::set-output name=env_name::dev"
          elif [ "${{ github.ref }}" = "refs/heads/qa" ]; then
            echo "::set-output name=env_name::qa"
          else
            echo "::set-output name=env_name::dev"
          fi

      - 
        name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%d.%m.%y')"
      
      -
        name: Login to GHCR
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            registry:login ${{ env.REGISTRY }} ${{ github.actor }} ${{ secrets.GITHUB_TOKEN }}

      -
        name: Deploy to Dokku
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            git:from-image acc-squad-m1s3-back-${{ steps.branch_check.outputs.env_name }} ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.REPOSITORY }}:${{ steps.date.outputs.date }}-${{ github.ref_name }}.${{ github.run_number }}
